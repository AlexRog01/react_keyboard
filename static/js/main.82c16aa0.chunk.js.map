{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","letter","passedKey","event","setState","key","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAe,CACbC,OAAQ,MAFZ,EAaEC,UAAY,SAACC,GACX,EAAKC,SAAS,CAAEH,OAAQE,EAAME,OAdlC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,aAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,aAV/C,oBAiBE,WACE,OACE,qBAAKQ,UAAU,MAAf,SACGF,KAAKR,MAAMC,OAER,oBAAGS,UAAU,eAAb,sCAEGF,KAAKR,MAAMC,OAFd,OAMC,mBAAGS,UAAU,eAAb,2CA5Bb,GAAyBC,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.82c16aa0.chunk.js","sourcesContent":["import React from 'react';\n\ninterface State {\n  letter: string | null,\n}\n\nexport class App extends React.Component {\n  state: State = {\n    letter: null,\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.passedKey);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.passedKey);\n  }\n\n  passedKey = (event: KeyboardEvent): void => {\n    this.setState({ letter: event.key });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.letter\n          ? (\n            <p className=\"App__message\">\n              The last pressed key is &#91;\n              {this.state.letter}\n              &#93;\n            </p>\n          )\n          : (<p className=\"App__message\">Nothing was pressed yet</p>)}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}